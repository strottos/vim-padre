" vim: et ts=2 sts=2 sw=2

Before:
  tabnew
  call padre#buffer#CreateForCurrentBuffer('Test_Buffer', 'TestBuf', 1)
  call padre#buffer#CreateForCurrentBuffer('Test_Buffer_Nomodify', 'TestBuf', 0)
  quit

Execute (Check we can add single lines of text to a buffer):
  tabnew
  buffer Test_Buffer

  call padre#buffer#AppendBuffer('Test 1', 1)
  call padre#buffer#AppendBuffer('Test 2', 1)

  AssertEqual getline(1), 'Test 1'
  AssertEqual getline(2), 'Test 2'

  quit

Execute (Check we can add multiple lines to a buffer):
  tabnew
  buffer Test_Buffer_Nomodify

  call padre#buffer#AppendBuffer("Test line 1\nTest line 2\nTest line 3", 0)

  AssertEqual getline(1), 'Test line 1'
  AssertEqual getline(2), 'Test line 2'
  AssertEqual getline(3), 'Test line 3'
  AssertEqual getline(4), ''

  quit

Execute (Check we can replace buffer):
  tabnew
  buffer Test_Buffer

  call padre#buffer#AppendBuffer("Test line 1\nTest line 2\nTest line 3", 1)
  call padre#buffer#ReplaceBuffer("TEST LINE 1\nTEST LINE 2\nTEST LINE 3", 1)

  AssertEqual getline(1), 'TEST LINE 1'
  AssertEqual getline(2), 'TEST LINE 2'
  AssertEqual getline(3), 'TEST LINE 3'
  AssertEqual getline(4), ''

  quit

Execute (Check we can clear a buffer):
  tabnew
  buffer Test_Buffer_Nomodify

  call padre#buffer#AppendBuffer("Test line 1\nTest line 2\nTest line 3", 0)

  AssertEqual line('$'), 4

  call padre#buffer#ClearBuffer(0)

  AssertEqual line('$'), 1
  AssertEqual getline(1), ''

  quit

Execute (Check a buffer scrolls when appended to if we're currently at the bottom):
  tabnew
  buffer Test_Buffer_Nomodify

  call padre#buffer#ClearBuffer(0)

  for t:line_num in range(1, winheight(winnr()) + 2)
    call padre#buffer#AppendBuffer('Test ' . t:line_num, 0)
  endfor
  normal G
  let t:current_buffer_line = getpos('.')[1]

  call padre#buffer#AppendBuffer("Test new line 1\nTest new line 2", 0)
  AssertEqual t:current_buffer_line + 2, getpos('.')[1]

  quit

Execute (Check a buffer doesn't scrolls when appended to if we're not currently at the bottom):
  tabnew
  buffer Test_Buffer_Nomodify

  call padre#buffer#ClearBuffer(0)

  for t:line_num in range(1, winheight(winnr()) + 2)
    call padre#buffer#AppendBuffer('Test ' . t:line_num, 0)
  endfor
  normal 1G

  call padre#buffer#AppendBuffer("Test new line 1\nTest new line 2", 0)
  AssertEqual 1, getpos('.')[1]

  quit
