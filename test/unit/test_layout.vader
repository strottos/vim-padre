" vim: et ts=2 sts=2 sw=2

Before:
  tabnew
  call padre#buffer#CreateForCurrentBuffer('Test_Tabs', 'TestBuf', 0)
  quit

After:
  Restore

Execute (Check that we can find a tab containing a buffer):
  let g:original_number_tabs = tabpagenr('$')
  tabnew
  tabnew
  execute 'buffer Test_Tabs'
  tabnew
  tabnew
  execute 'buffer Test_Tabs'

Then:
  AssertEqual [g:original_number_tabs + 2, g:original_number_tabs + 4], padre#layout#GetTabNumbersContainingBufferName('Test_Tabs')

  quit
  quit
  quit
  quit

Execute (Check we can open an existing tab if it contains the buffer specified):
  let g:original_number_tabs = tabpagenr('$')
  tabnew
  execute 'buffer Test_Tabs'
  tabnew
  execute 'buffer Test_Tabs'

  call padre#layout#OpenTabWithBuffer('Test_Tabs')

Then:
  AssertEqual [g:original_number_tabs + 1, g:original_number_tabs + 2], padre#layout#GetTabNumbersContainingBufferName('Test_Tabs')
  AssertEqual g:original_number_tabs + 1, tabpagenr()
  AssertEqual 'Test_Tabs', expand('%:t')

  quit
  quit

Execute (Check if a tab contains the buffer twice it only reports once):
  let g:original_number_tabs = tabpagenr('$')
  tabnew
  execute 'buffer Test_Tabs'
  split
  execute 'buffer Test_Tabs'

  call padre#layout#OpenTabWithBuffer('Test_Tabs')

Then:
  AssertEqual [g:original_number_tabs + 1], padre#layout#GetTabNumbersContainingBufferName('Test_Tabs')

  quit
  quit
